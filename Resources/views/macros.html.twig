{% macro calendar_event_view_template(id) %}
<script type="text/html" id="{{ id }}">
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    <div class="widget-content">
        <div class="row-fluid form-horizontal">
            <div class="responsive-block">
                {{ UI.renderHtmlProperty('oro.calendar.calendarevent.title.label'|trans, '<%= formatter.string(title) %>') }}
                {{ UI.renderHtmlProperty('oro.calendar.calendarevent.description.label'|trans, '<%= formatter.text(description) %>') }}
                {{ UI.renderHtmlProperty('oro.calendar.calendarevent.start.label'|trans, '<%= formatter.dateTime(start) %>') }}
                {{ UI.renderHtmlProperty('oro.calendar.calendarevent.end.label'|trans, '<%= formatter.dateTime(end) %>') }}
                {{ UI.renderHtmlProperty('oro.calendar.calendarevent.all_day.label'|trans, '<%= formatter.bool(allDay) %>') }}
            </div>
            <div class="widget-actions form-actions" style="display: none;">
                <% if (id != null && removable) { %>
                {{
                    UI.deleteButton({
                        'aCss': 'no-hash',
                        'id': 'btn-remove-calendarevent',
                        'dataMessage': 'Are you sure you want to delete this event?',
                        'title': 'Delete event',
                        'label': 'Delete',
                        'data': {'action-name': 'delete'}
                    })
                }}
                <% } %>
                <% if (id == null || (id != null && editable)) { %>
                <button class="btn" type="button" data-action-name="edit">{{ 'oro.ui.edit'|trans }}</button>
                <% } %>
            </div>
        </div>
    </div>
</script>
{% endmacro %}

{% macro calendar_event_invitation(parentEvent) %}
    <div class="row-fluid">
        <div class="responsive-block">
            {{ _self.build_invitation_link(parentEvent) }}
            {% for event in parentEvent.childEvents %}
                {{ _self.build_invitation_link(event) }}
            {% endfor %}
        </div>
    </div>
{% endmacro %}

{% macro build_invitation_link(calendarEvent) %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    <div>
        <i class="icon-user"></i>
        {% set invitationStatus = calendarEvent.invitationStatus %}
        {% if invitationStatus == constant('Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent::NOT_RESPONDED') %}
            {% set invitationClass = 'icon-reply' %}
        {% elseif invitationStatus == constant('Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent::TENTATIVELY_ACCEPTED') %}
            {% set invitationClass = 'icon-question' %}
        {% elseif invitationStatus == constant('Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent::ACCEPTED') %}
            {% set invitationClass = 'icon-ok' %}
        {% elseif invitationStatus == constant('Oro\\Bundle\\CalendarBundle\\Entity\\CalendarEvent::DECLINED') %}
            {% set invitationClass = 'icon-remove' %}
        {% else %}
            {% set invitationClass = '' %}
        {% endif %}
        {% if invitationClass is not empty %}
            <i class="{{ invitationClass }}" title="{{ _self.calendar_event_invitation_status(invitationStatus) }}"></i>
        {% endif %}
        <span>
            {% if (resource_granted('oro_user_user_view') and calendarEvent.calendar.owner) %}
                {{ UI.link({
                    'label' : calendarEvent.calendar.owner|oro_format_name,
                    'path'  : path('oro_user_view', {'id': calendarEvent.calendar.owner.id})
                }) }}
            {% else %}
                {{ calendarEvent.calendar.owner ? calendarEvent.calendar.owner|oro_format_name : '' }}
            {% endif %}
        </span>
    </div>
{% endmacro %}

{%- macro calendar_event_invitation_status(statusCode) -%}
    {{ ('oro.calendar.calendarevent.statuses.' ~ statusCode)|trans }}
{%- endmacro -%}

{%- macro calendar_event_invitation_action(statusCode) -%}
    {{ ('oro.calendar.calendarevent.actions.' ~ statusCode)|trans }}
{%- endmacro -%}

{% macro calendar_event_form_template(id, form) %}
<script type="text/html" id="{{ id }}">
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {% set data = [
            form_row(form.title),
            form_row(form.description),
            form_row(form.start),
            form_row(form.end),
            form_row(form.allDay),
            form_row(form.backgroundColor),
            form_row(form.reminders),
            form_row(form.childEvents),
            form_row(form.notifyInvitedUsers)
        ]
    %}
    {% set templateReplacement = {
        '<script': '<% print("<sc" + "ript") %>',
        '</script>': '<% print("</sc" + "ript>") %>',
        '<%': '<% print("<" + "%") %>',
        '%>': '<% print("%" + ">") %>',
    } %}
    <div class="widget-content">
        <div class="alert alert-error" style="display: none;"></div>
        <form id="{{ form.vars.name }}" action="#">
            <fieldset class="form-horizontal">
                {{ UI.scrollSubblock(null, data, true, false)|replace(templateReplacement)|raw }}
                <% if (typeof notifiable !== 'undefined' && notifiable) { %>
                    {{ _self.notifyGuestsComponent() }}
                <% } %>
                <div class="widget-actions form-actions" style="display: none;">
                    <% if (id != null && removable) { %>
                    {{
                        UI.deleteButton({
                            'aCss': 'no-hash',
                            'id': 'btn-remove-calendarevent',
                            'dataMessage': 'Are you sure you want to delete this event?',
                            'title': 'Delete event',
                            'label': 'Delete',
                            'data': {'action-name': 'delete'}
                        })
                    }}
                    <% } %>
                    <button class="btn" type="reset">{{ 'Cancel'|trans }}</button>
                    <% if (id == null || (id != null && editable)) { %>
                    <button class="btn btn-primary" type="submit">{{ 'Save'|trans }}</button>
                    <% } %>
                </div>
            </fieldset>
        </form>
        {{ oro_form_js_validation(form)|replace(templateReplacement)|raw }}
    </div>
</script>
{% endmacro %}

{% macro notifyGuestsComponent() %}
    {% set componentName = 'oroui/js/app/components/view-component' %}
    {% set componentOptions = {'view': 'orocalendar/js/app/views/guest-notifier-view'} %}
    <div id = "component-element" style="display: none" data-page-component-module="{{ componentName }}"
         data-page-component-options="{{ componentOptions|json_encode }}">
    </div>
{% endmacro %}

{% macro renderCalendar(containerSelector, entity, startDate, endDate, calendar, eventsOptions, connectionsOptions, callbackMacro) %}
<script type="text/javascript">
    require(['jquery', 'underscore', 'orocalendar/js/calendar', 'orocalendar/js/calendar/event/collection',
        'orocalendar/js/calendar/connection/collection', 'orolocale/js/locale-settings', 'oroui/js/mediator'],
    function($, _, Calendar, EventCollection, ConnectionCollection, localeSettings, mediator){
        var connections = new ConnectionCollection();
        connections.reset({{ render(path('oro_api_get_calendar_connections', {id: entity.id})) }});
        var events = new EventCollection();
        events.reset({{ render(path('oro_api_get_calendarevents', {calendar: entity.id, start: startDate|date('c'), end: endDate|date('c'), subordinate: true})) }});

        var dateFormat = localeSettings.getVendorDateTimeFormat('fullcalendar', 'date', 'MMM d, yyyy');
        var timeFormat = localeSettings.getVendorDateTimeFormat('fullcalendar', 'time', 'h:mm TT');
        // @TODO Get date format without year
        var dateFormatWithoutYear = dateFormat;
        // prepare FullCalendar specific date/time formats
        var isDateFormatStartedWithDay = dateFormat.indexOf('d') === 0;
        var weekFormat = isDateFormatStartedWithDay
            ? 'd[ MMMM][ yyyy]{ \'&#8212;\' d MMMM yyyy}'
            : 'MMMM d[ yyyy]{ \'&#8212;\'[ MMMM] d yyyy}';

        var options = {
            el: {{ containerSelector|json_encode|raw }},
            calendar: {{ entity.id|json_encode|raw }},
            collection: events,
            eventsOptions: {
                subordinate: true,
                containerSelector: {{ eventsOptions.containerSelector|json_encode|raw }},
                itemViewTemplateSelector: {{ eventsOptions.itemViewTemplateSelector|json_encode|raw }},
                itemFormTemplateSelector: {{ eventsOptions.itemFormTemplateSelector|json_encode|raw }},
                {% if eventsOptions.contentHeight is defined %}
                contentHeight: {{ eventsOptions.contentHeight|json_encode|raw }},
                {% endif %}
                date: "{{ 'now'|date('c') }}",
                firstDay: localeSettings.getCalendarFirstDayOfWeek() - 1,
                {% if eventsOptions.firstHour is defined %}
                firstHour: {{ eventsOptions.firstHour|json_encode|raw }},
                {% endif %}
                monthNames: localeSettings.getCalendarMonthNames('wide', true),
                monthNamesShort: localeSettings.getCalendarMonthNames('abbreviated', true),
                dayNames: localeSettings.getCalendarDayOfWeekNames('wide', true),
                dayNamesShort: localeSettings.getCalendarDayOfWeekNames('abbreviated', true),
                header: {
                    left: {{ eventsOptions.leftHeader|default('')|json_encode|raw }},
                    center: {{ eventsOptions.centerHeader|default('')|json_encode|raw }},
                    right: {{ eventsOptions.rightHeader|default('')|json_encode|raw }},
                    ignoreTimezone: false,
                    allDayDefault: false
                },
                defaultView: {{ eventsOptions.defaultView|default('month')|json_encode|raw }},
                allDayText: {{ 'oro.calendar.control.all_day'|trans|json_encode|raw }},
                buttonText: {
                    today: {{ 'oro.calendar.control.today'|trans|json_encode|raw }},
                    month: {{ 'oro.calendar.control.month'|trans|json_encode|raw }},
                    week: {{ 'oro.calendar.control.week'|trans|json_encode|raw }},
                    day: {{ 'oro.calendar.control.day'|trans|json_encode|raw }}
                },
                titleFormat: {
                    month: 'MMMM yyyy',
                    week: weekFormat,
                    day: 'dddd, ' + dateFormat
                },
                columnFormat: {
                    month: 'ddd',
                    week: 'ddd ' + dateFormatWithoutYear,
                    day: 'dddd ' + dateFormatWithoutYear
                },
                timeFormat: {
                    '': timeFormat,
                    agenda: timeFormat + '{ - ' + timeFormat + '}'
                },
                axisFormat: timeFormat
            },
            connectionsOptions: {
                {% if not connectionsOptions is null %}
                containerSelector: {{ connectionsOptions.containerSelector|json_encode|raw }},
                containerTemplateSelector: {{ connectionsOptions.containerTemplateSelector|json_encode|raw }},
                itemTemplateSelector: {{ connectionsOptions.itemTemplateSelector|json_encode|raw }},
                {% endif %}
                collection: connections
            },
            colorManagerOptions: {
                colors: {{ oro_config_value('oro_calendar.calendar_colors')|json_encode|raw }}
            }
        };
        _.extend(options.eventsOptions, {{ calendar|json_encode|raw }});
        $(function() {
            var calendar = new Calendar(options);
            calendar.render();
            {% if eventsOptions.renderCompleteCallback is defined %}
            var renderCompleteCallback = {{ eventsOptions.renderCompleteCallback|raw }};
            renderCompleteCallback(calendar);
            {% endif %}
            calendar.$el.data('calendar', calendar);
            mediator.on('page:beforeChange', _.bind(calendar.dispose, calendar));
        });
    });
</script>
{% endmacro %}
